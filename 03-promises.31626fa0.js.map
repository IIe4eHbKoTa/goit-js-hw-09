{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbO,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBAEN,MAAMC,EAAaC,SAASN,SAASC,cAAc,uBAAuBM,MAAO,IAC3EC,EAAYF,SAASN,SAASC,cAAc,sBAAsBM,MAAO,KAI/E,SAA0BE,EAAaC,EAAYC,GACjD,MAAMC,EAAW,GACjB,IAAIC,EAAeH,EAEnB,IAAK,IAAII,EAAI,EAAGA,EAAIL,EAAaK,IAAK,CACpC,MAAMC,EAAUxB,EAAcuB,EAAI,EAAGD,GAErCE,EACGC,MAAMC,IACLC,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBH,EAAIzB,eAAoByB,EAAExB,UAAe,IAEvF4B,OAAOC,IACNJ,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAoBD,EAAE9B,eAAmB8B,EAAE7B,UAAc,IAGrFmB,EAASY,KAAKT,GAEdF,GAAgBF,C,EAIpBc,CAxBoBnB,SAASN,SAASC,cAAc,wBAAwBM,MAAO,IAwBrDF,EAAYG,GAE3BR,SAAS0B,iBAAiB,SAElCC,SAAQC,IACbA,EAAMrB,MAAQ,EAAE,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const inputDelay = parseInt(document.querySelector('input[name=\"delay\"]').value, 10);\n  const inputStep = parseInt(document.querySelector('input[name=\"step\"]').value, 10);\n  const inputAmount = parseInt(document.querySelector('input[name=\"amount\"]').value, 10);\n\n\n  function generatePromises(inputAmount, inputDelay, inputStep) {\n    const promises = [];\n    let currentDelay = inputDelay;\n\n    for (let i = 0; i < inputAmount; i++) {\n      const promise = createPromise(i + 1, currentDelay);\n\n      promise\n        .then((result) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n        })\n        .catch((error) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n        });\n\n      promises.push(promise);\n\n      currentDelay += inputStep; \n    }\n  }\n\n  generatePromises(inputAmount, inputDelay, inputStep);\n\n  const inputs = document.querySelectorAll('input')\n\n  inputs.forEach(input => {\n    input.value = ''\n  })\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","inputDelay1","parseInt","value","inputStep1","inputAmount","inputDelay","inputStep","promises","currentDelay","i","promise","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","push","generatePromises","querySelectorAll","forEach","input"],"version":3,"file":"03-promises.31626fa0.js.map"}